name: Test, Build & Push Microservices to Docker Hub

on:
  push:
    branches: ['main']
    paths:
      - 'backend-go/**'
      - 'backend-node/**'
      - 'email-service/**'
      - 'frontend/**'
      - ".github/workflows/**"
  pull_request:
    paths:
      - 'backend-go/**'
      - 'backend-node/**'
      - 'email-service/**'
      - 'frontend/**'

jobs:
  detect_changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend-go:
              - 'backend-go/**'
            backend-node:
              - 'backend-node/**'
            email-service:
              - 'email-service/**'
            frontend:
              - 'frontend/**'

  test:
    name: Run Tests
    needs: detect_changes
    if: ${{ fromJSON(needs.detect_changes.outputs.changes) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.detect_changes.outputs.changes) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        if: ${{ matrix.service == 'backend-node' || matrix.service == 'frontend' }}
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up Go
        if: ${{ matrix.service == 'backend-go' || matrix.service == 'email-service' }}
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      # Install & test for Node.js services
      - name: Install & Run Tests (Node.js)
        if: ${{ matrix.service == 'backend-node' || matrix.service == 'frontend' }}
        working-directory: ./${{ matrix.service }}
        run: |
          npm install
          npm test

      # Run tests for Go service
      - name: Run Tests (Go)
        if: ${{ matrix.service == 'backend-go' || matrix.service == 'email-service' }}
        working-directory: ./${{ matrix.service }}
        run: go test ./...

  build_and_push:
    name: Build & Push Docker Images
    needs: [detect_changes, test]
    if: ${{ fromJSON(needs.detect_changes.outputs.changes) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJSON(needs.detect_changes.outputs.changes) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
